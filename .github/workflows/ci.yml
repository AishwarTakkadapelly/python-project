name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest

    - name: Run tests
      run: |
        pytest
      env:
        PYTHONPATH: ${{ github.workspace }}  # Ensuring the PYTHONPATH is set to the project root

    - name: Build Docker image
      run: |
        docker build -t my-python-app .

    - name: Run Docker container
      run: |
        docker run -d -p 5055:5000 --name my-python-app-container my-python-app
        sleep 10  # Give it some time to start
        curl -f http://localhost:5000 || (docker logs my-python-app-container && exit 1)

    - name: Push Docker image (optional)
      if: github.event_name == 'push'
      env:
        DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      run: |
        echo "$DOCKER_HUB_ACCESS_TOKEN" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
        docker tag my-python-app $DOCKER_HUB_USERNAME/my-python-app:latest
        docker push $DOCKER_HUB_USERNAME/my-python-app:latest

    - name: Clean up
      if: always()
      run: |
        docker stop my-python-app-container || true
        docker rm my-python-app-container || true
